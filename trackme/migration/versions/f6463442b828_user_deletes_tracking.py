"""tmp

Revision ID: f6463442b828
Revises: d4f3409c749d
Create Date: 2021-05-25 20:33:33.157294

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "f6463442b828"
down_revision = "d4f3409c749d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("attributes_user_id_fkey", "attributes", type_="foreignkey")
    op.drop_constraint("attributes_topic_id_fkey", "attributes", type_="foreignkey")
    op.create_foreign_key(None, "attributes", "topics", ["topic_id"], ["id"])
    op.create_foreign_key(None, "attributes", "users", ["user_id"], ["id"])
    op.alter_column(
        "tracking", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column("tracking", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column(
        "tracking_attributes", "attribute_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "tracking_attributes", "tracking_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.drop_constraint("unique_combo_idx", "tracking_attributes", type_="unique")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(
        "unique_combo_idx", "tracking_attributes", ["attribute_id", "tracking_id"]
    )
    op.alter_column(
        "tracking_attributes", "tracking_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "tracking_attributes",
        "attribute_id",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.alter_column("tracking", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        "tracking", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.drop_constraint(None, "attributes", type_="foreignkey")
    op.drop_constraint(None, "attributes", type_="foreignkey")
    op.create_foreign_key(
        "attributes_topic_id_fkey",
        "attributes",
        "topics",
        ["topic_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "attributes_user_id_fkey",
        "attributes",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###
